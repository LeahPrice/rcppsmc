2017-07-12  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/algParams.h: Moving basic parameters out of algParams and back into sampler.
	* inst/include/sampler.h: Idem.
	
	* inst/include/population.h: Adding a function GetN() to get the number of particles from the
	  population object.
	* inst/include/LinReg_LA_auto.h: Using GetN() from population object instead of parameter adaptation object
	
	* src/LinReg_LA_auto.cpp: Changing SetSMCParams back to SetResampParams and calling SetAdaptSet
	* src/blockpfgaussianopt.cpp: Changing SetSMCParams back to SetResampParams
	* src/LinReg.cpp: Idem
	* src/LinReg_LA.cpp: Idem
	* src/nonLinPMMH.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem

2017-07-11  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/algParams.h: Bringing in some basic parameters and adding more virtual functions
	* inst/include/sampler.h: Putting the basic parameters into the algorithm parameter class.
	
	* inst/include/LinReg.h: Removing adaptation (using diagonal covariance not optimal anyway -
	  moving adaptation into another example)
	* src/LinReg.cpp: Removing adaptation and updating the sampler constructor.
	
	* inst/include/LinReg_LA_auto.h: A version of LinReg_LA with adaptation of the random walk
	  covariance matrix and temperature schedule
	* src/LinReg_LA_auto.cpp: Idem
	* R/LinRegLA_auto.R: Idem
	* NAMESPACE: adding this new function

	* inst/include/LinReg_LA.h: renaming rad_obs2 class to rad_obs and putting in example namespace
	
	* src/blockpfgaussianopt.cpp: Adjusting the call to the sampler constructor.
	* src/LinReg_LA.cpp: Idem
	* src/nonLinPMMH.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem

2017-07-8  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/algParams.h: Setting up a base class for adaptation (will add basic parameters later) 
	* inst/include/sampler.h: Using a pointer to a parameter object which can be updated before MCMC steps.

	* inst/include/LinReg.h: Adding a parameter object which gets
	  the standard deviation of the parameters before the MCMC step.
	* src/LinReg.cpp: Idem.
	
	* src/blockpfgaussianopt.cpp: Adjusting the call to the sampler
	  constructor to include a NULL parameter object pointer.
	* src/LinReg_LA.cpp: Idem
	* src/nonLinPMMH.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem

2017-07-8  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/rngR.h: Removed because we are now using Rcpp attributes.
	* inst/include/moveset.h: Removed use of rng class
	* inst/include/sampler.h: Idem
	* inst/include/smctc.h: Idem

	* inst/include/blockpfgaussianopt.h: Removed use of rng class
	* inst/include/LinReg.h: Idem
	* inst/include/LinReg_LA.h: Idem
	* inst/include/nonLinPMMH.h: Idem
	* inst/include/pflineart.h: Idem
	* inst/include/pfnonlinbs.h: Idem
	* src/blockpfgaussianopt.cpp: Idem
	* src/LinReg.cpp: Idem.
	* src/LinReg_LA.cpp: Idem
	* src/nonLinPMMH.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	
2017-07-4  Leah South  <leah.south@hdr.qut.edu.au>

	* DESCRIPTION: automatically added RoxygenNote.
	* NAMESPACE: Updating names for linear regression examples (unnecessary BS in titles removed)
	  and adding the non-linear PMMH example to exports.
	* R/*.R: Adding documentation for Roxygen
	* man/*.Rd: Newly produced Roxygen documentation
	* rcppsmc.Rproj: enabling tools for automatic documentation
	*src/LinReg.cpp: fixed function to not use BS in title
	*src/LinReg_LA.cpp: fixed function to not use BS in title

2017-06-30  Leah South  <leah.south@hdr.qut.edu.au>

	* DESCRIPTION: Setting lazy data to true
	* data/pfdata.rda: Switching the previous pf-data.csv to a new format and location
	* data/radiata.rda: Switching the regression example radiata.csv data to a new format and location 
	* R/LinRegBS.R: Taking account of the new data location
	* R/LinRegLABS.R: Taking account of the new data location and switching to using a simple sequence
	  of temperatures
	* R/pfLineartBS.R: Taking account of the new data location

2017-06-30  Leah South  <leah.south@hdr.qut.edu.au>

	* src/nonLinPMMH.cpp: Replaces PMMH.cpp. Creating a function for the prior and cleaning up unnecessary commented lines.
	* R/simNonLinPMMH.R: Creating a function to simulate data and removing the script (simPMMH.R)
	  and the example simulated data (PMMH-data.csv).
    * inst/include/nonLinPMMH.h: replaces PMMH.h.
	* man/nonLin/nonLinPMMH.Rd: Replaces PMMH.Rd.
	* R/nonLinPMMH.R: Replaces PMMH.R.
	* src/pflineart.cpp: Removing unnecessary commented lines.
	* src/LinReg.cpp: Removing unnecessary commented line.
	* src/LinReg_LA.cpp: Removing unnecessary commented line.
	* inst/include/rngR.h: removing commented lines for NormalTruncated.

2017-06-29  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/PMMH.h: Implementing a new example based on using PMMH for a non-linear
	state space model as in Andrieu et al. (2010).
	* src/simPMMH.R: Generating synthetic data (not necessary for runs)
	* inst/sampleData/PMMH-data.csv: Generated data to be used as a default
	* src/PMMH.cpp: The new example.
	* man/PMMH.Rd: Idem.
	* R/PMMH.R: Idem.

2017-06-29  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/sampler.h: Moving the path sampling methods into a single function. Putting the enums into namespaces.
	
	* src/LinReg_LA.cpp: Adjusting the resampling, history and path sampling types.
	* src/blockpfgaussianopt.cpp: Adjusting the resampling and history types.
	* src/LinReg.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

2017-06-29  Leah South  <leah.south@hdr.qut.edu.au>

	* TODO: Adding point about storing ancestral lines in the particle history.
	* src/Makevars: Removing C++11 dependency.
	* src/blockpfgaussianopt.cpp: Idem.
	* src/LinReg.cpp: Idem.
	* src/LinReg_LA.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

2017-06-28  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/history.h: Removing the history class (functions to go into the sampler class instead).
	  Adding the function Integrate_Var which gets the Monte Carlo estimate of the variance for a
	  given integrand (used in second order path sampling correcting)
	* inst/include/sampler.h: Moving objects previously in the history class to sampler. Adding alternative
	  path sampling estimators based on the trapezoidal rule (and a second order correction of the trapezoidal rule).
	  
	* inst/sampleData/radiata-temps.csv: Adding the temperature zero explicitly (required for the new path sampling estimators)
	* src/LinReg_LA.cpp: Adjusting to take into account that the temperature of zero is included and using C++11
	
	* src/Makevars: Using C++11
	* src/blockpfgaussianopt.cpp: Idem.
	* src/LinReg.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.
	

2017-06-26  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/sampler.h: Removing unnecessary push to history in the path sampling estimator.
    * inst/include/history.h: Adjusting iterators to correspond to the above change.

2017-06-26  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/history.h: re-introducing a history class and adding back in path sampling
	  integration and stream operators.
	* inst/include/population.h: Switching to const where appropriate
	* inst/include/sampler.h: Switching to using the history class rather than std::list<historyelement...>,
	  switching to const where appropriate, adding stream operators and changing the nAccepted
	  to give the total accepted particles within the MCMC step.
	* inst/include/moveset.h: Changing DoMCMC to return 0 if no MCMC step (rather than false)
	
	* inst/include/LinReg_LA.h: Adding in the required functions for path sampling evidence estimation
	* src/LinReg_LA.cpp: Adding in path sampling evidence estimates
	* src/LinReg.cpp: Adding in stream operators for the parameters
	* src/pflineart.cpp: Adding in stream operators for the parameters

2017-06-23  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/sampler.h: Switching to using STL list container for history
	* inst/include/history.h: Idem (some functionality needs to be added back in)
	
2017-06-22  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/history.h: Switching back to pointers...
    * inst/include/sampler.h: Changing so that a pointer to the population set is entered in
	  History.Push and History.Pop.
	  

2017-06-20  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/moveset.h: Changing so that the user-defined initialisation
	  function takes a reference to a particle value as input and does not return
	  anything. User-defined move and MCMC functions now take references to particle
	  values and log weights as inputs.
	* inst/include/population.h: removing the particle level object
	* inst/include/sampler.h: Switching to the new initialisation, move and MCMC functions
	
	* src/LinReg.cpp: Updating the initialisation and move functions to correspond to above changes.
	* src/LinReg_LA.cpp: Idem
	* src/blockpfgaussianopt.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	* inst/include/LinReg.h: Idem
	* inst/include/LinReg_LA.h: Idem
	* inst/include/blockpfgaussianopt.h: Idem
	* inst/include/pflineart.h: Idem
	* inst/include/pfnonlinbs.h: Idem

2017-06-19  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/moveset.h: Moving the for loop for initialisation back into the library
	* inst/include/population.h: Creating a particle level object to be used only in initialisation
	* inst/include/sampler.h: Calling the new initialisation function
	
	* src/LinReg.cpp: Updating the initialisation function to return a particle level object.
	* src/LinReg_LA.cpp: Idem
	* src/blockpfgaussianopt.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	* inst/include/LinReg.h: Idem
	* inst/include/LinReg_LA.h: Idem
	* inst/include/blockpfgaussianopt.h: Idem
	* inst/include/pflineart.h: Idem
	* inst/include/pfnonlinbs.h: Idem

2017-06-19  Leah South  <leah.south@hdr.qut.edu.au>

    * inst/include/population.h: replaces particle.h. Renaming the template class for the particles to "population"
	* inst/include/history.h: Idem
	* inst/include/moveset.h: Idem
	* inst/include/sampler.h: Idem
	* inst/include/blockpfgaussianopt.h: Idem
	* inst/include/pflineart.h: Idem
	* inst/include/pfnonlinbs.h: Idem
	* src/blockpfgaussianopt.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	
	* NAMESPACE: Changing names so that radiata -> LinReg to specify the type
	  of problem not the dataset. Changing "radiataPP" to "LinRegLA" where LA
	  stands for likelihood annealing instead of power posteriors.
	* R/LinRegBS.R: replaces radiataBS
	* R/LinRegPPBS.R: replaces radiataPPBS
	* inst/include/LinReg.h: replaces radiata
	* inst/include/LinReg_LA.h: replaces radiata_pp
	* inst/sampleData/radiata-temps.csv: replaces radiata-pptemps
	* man/LinRegBS.Rd: replaces radiataBS
	* man/LinRegLABS.Rd: replaces radiataPPBS
	* src/LinReg.cpp: replaces radiata
	* src/LinReg_LA.cpp: replaces radiata_pp
	
2017-06-19  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/history.h: Updating the description at the top of the file.
	* inst/include/moveset.h: Idem
	* inst/include/particle.h: Idem
	* inst/include/rngR.h: Idem
	* inst/include/sampler.h: Idem
	* inst/include/smc-exception.h: Idem
	* inst/include/smctc.h: Idem
	* inst/include/blockpfgaussianopt.h: Idem
	* inst/include/pflineart.h: Idem
	* inst/include/radiata.h: Idem
	* inst/include/radiata_pp.h: Idem
	* inst/include/pfnonlinbs.h: Idem & updating the namespace for this example to include the number of particles.
	* man/blockpfGaussianOpt.Rd: Updating authors
	* man/pfLineartBS.Rd: Idem
	* man/pfNonlinBS.Rd: Idem
	* man/radiataBS.Rd: Idem
	* man/radiataPPBS.Rd: Idem
	* src/blockpfgaussianopt.cpp: Updating the description at the top of the file and starting switch to Rcpp attributes
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	* src/radiata.cpp: Idem
	* src/radiata_pp.cpp: Idem
	* src/init.c: Removed (now using Rcpp attributes)
	* src/RcppExports.c: First time being automatically produced (with use of Rcpp attributes)
	* R/bspfGaussianOptimal.R: Starting switch to Rcpp attributes
	* R/pfLineartBS.R: Idem
	* R/pfNonlinBS.R: Idem
	* R/radiataBS.R: Idem
	* R/radiataPPBS.R: Idem
	* R/RcppExports.R: First time being automatically produced (with use of Rcpp attributes)
	* TODO: Fixing a typo
	

2017-06-17  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/history.h: changing some functions to pass and return constant references.
	* inst/include/particle.h: Idem
	* inst/include/sampler.h: Idem

2017-06-16  Leah South  <leah.south@hdr.qut.edu.au>

	* DESCRIPTION: Linking to RcppArmadillo
	* src/Makevars: Adding a line for Armadillo use
	
	* NAMESPACE: Adding a likelihood annealing implementation of the radiata pine regression example
	* inst/include/radiata_pp.h: Idem
	* inst/include/radiata-pptemps.csv: Idem
	* src/radiata_pp.cpp: Idem
	* R/radiataPPBS.R: Idem
	
	* inst/include/history.h: Switching to a population level object and using Armadillo vectors for weights
	* inst/include/moveset.h: Idem
	* inst/include/particle.h: Idem
	* inst/include/rngR.h: Idem
	* inst/include/sampler.h: Idem
	* inst/include/smc-exception.h: Idem
	* src/history.cppsrc/smc-exception.cpp: Idem
	
	* inst/include/blockpfgaussianopt.h: Making more use of the example namespaces & switching to population level objects
	* inst/include/pflineart.h: Idem
	* inst/include/radiata.h: Idem
	* inst/include/pfnonlinbs.h: Idem
	* src/blockpfgaussianopt.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem
	* src/radiata.cpp: Idem
	* src/init.c: Idem
	
2017-06-06  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/sampler.h: added ability to estimate the ratio of normalising constants
	* man/pfLineartBS.RD: Idem
	* inst/include/pflineart.h: Idem
	* src/pflineart.cpp: Idem
	* inst/include/radiata.h: a new example based on estimating the parameters of a linear regression
	* R/radiataBS.R: Idem
	* man/radiataBS.RD: Idem
	* src/radiata.cpp: Idem
	* src/init.c: Adding the radiataBS function
	* inst/sampleData/radiata-data.csv: default data for the radiata example
	* NAMESPACE: added radiataBS

2017-03-04  Dirk Eddelbuettel  <edd@debian.org>

	* NAMESPACE: Use .registration=TRUE on useDynLib

2017-03-03  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Date, Version): Version 0.1.5
	(Title): Use 'Title Case'
	(Description): No 'This package'

	* inst/NEWS.Rd: Use \CRANpkg{} macro

	* NAMESPACE: Declare additional Imports

	* README.md: Switch to canonical URLs, update JSS paper URL

	* src/init.c (R_init_RcppSMC): Call R_registerRoutines()
	and R_useDynamicSymbols()

	* R/pfNonlinBS.R (pfNonlinBS): Use PACKAGE= with .Call()
	* R/bspfGaussianOptimal.R (blockpfGaussianOpt): Idem
	* R/pfLineartBS.R (onlinePlot): Idem

	* .travis.yml: Switch to using run.sh for Travis CI

2014-05-02  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.4

	* inst/include/sampler.h: Also delete pParticles in destructor

2014-05-01  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.3

2014-05-01  Adam M. Johansen  <a.m.johansen@warwick.ac.uk>

	* src/pflineart.cpp: Bug fix reduces number of calls of
	Sampler.iterate() by 1; resolves memory overrun issue.

2014-02-06  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.2

	* DESCRIPTION: Now Imports: rather than Depends: on Rcpp (and
	methods), also require Rcpp (>= 0.11.0) for new no-linking build

	* NAMESCPAE: Add an importFrom(Rcpp, evalCpp) for Rcpp 0.11.0

	* src/Makevars (PKG_CPPFLAGS): No longer need PKG_LIBS for Rcpp

2013-12-14  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1.3 as minor dev version, next release as 0.1.2

	* .travis.yml: Added for Github / Travis support
	* .gitignore: Added for git support
	* .Rbuildignore: Exclude a few more development files from tarball

	* R/pfLineartBS.R (onlinePlot): Replace x11() by dev.new()

2013-02-11  Adam Johansen  <a.m.johansen@warwick.ac.uk>

	* DESCRIPTION: Version 0.1.1.2 as minor dev version, next release as 0.1.2

	* R/pfNonlinBS.R: Automatically simulate data, and warn, if none supplied.

2013-02-10  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1.1 as minor dev version, next release as 0.1.2

	* R/pfNonlinBS.R: Corrected test for missing data in call

2012-05-14  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1

2012-05-13  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/sampler.h: Use explicit std::max() for g++-4.7

2012-03-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.0

	* src/rng.cpp: Moved old GSL-based RNG code to deprecated/
	* inst/include/rng.h: Idem
	* man/pfLineartBS.Rd: Callback-to-R example only if interactive()

2012-03-21  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* R/pfLineartBS.R Added function to dynamically set the range of
	the online plot.

2012-03-19  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* R/simGaussian.R Added data-simulating function
	* R/simLineart.R Idem
	* R/simNonlin.R Idem
	* man/blockpfGaussianOpt.Rd Added simulator doc and example usage.
	* man/pfLineartBS.Rd Idem
	* man/pfNonlinBS.Rd Idem
	* NAMESPACE Added data-simulating functions to namespace

2012-03-18  Dirk Eddelbuettel  <edd@debian.org>

	* R/pfLineartBS.R: Adjust naming of the two helper functions
	* man/pfLineartBS.Rd: Idem

2012-03-18  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* src/pfEx.cpp renamed to pflineartbs.cpp
	* inst/include/pffuncs.h renamed to pflineartbs.h
	* R/pfEx.R renamed to pfLineartBS.R
	* man/pfEx.Rd renamed to pfLineartBS.Rd

	* R/bspfGaussianOptimal.R tweaked & standardised plotting.
	* R/pfNonlinBS.R fixed plotting bug.

	* deprecated/ moved all rareEvents files here.

2012-03-17  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* man/pfEx.Rd updated to reflect previous changes.

	* NAMESPACE removed rareEvents
	* src/rareEvents.cpp moved to src/rareEvents.
	* src/simfunctions.cpp idem.
	* inst/include/simfunctions.h moved to inst/include/rareEvents.
	* inst/include/markovchains idem
	* man/rareEventsEx.Rd moved to man/rareEvents.
	* R/rareEventsEx.R moved to R/rareEvents.

2012-03-16  Dirk Eddelbuettel  <edd@dexter>

	* src/pf.cpp:
	  - Changed to get example data from R and pass to vector of cv_obs
	  - Added optional plotting callback to visualize estimation progress
	* R/pfEx.R:
	  - Added a helper func. to read data, restructured pfEx()
	  - Support optional plotting callback; provided sample function
	* man/pfEx.Rd: Updated accordingly

2012-03-16  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* NAMESPACE: Added pfNonlinBS.
	* src/pfnonlinbS.cpp: Bootstrap particle nonlinear particle filter
	example.
	* inst/include/pfnonlinbs.h: Header for the same.
	* R/pfNonlinBS.R: Minimal wrapper and output for the same.
	* man/pfNonlinBS.Rd: Minimal documentation for the same.

2012-03-15  Dirk Eddelbuettel  <edd@debian.org>

	* src/pf.cpp: Another new/delete cleanup

2012-03-15  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* Standardized file extensions .h and .cpp
	* src/blockpfgaussianoptfuncs.cpp merged into
	src/blockpfgaussianopt.cpp.
	* src/pffuncs.cpp merged into src/pf.cpp.

2012-03-13  Dirk Eddelbuettel  <edd@debian.org>

	* src/blockpfgaussianoptfuncs.cc: minor new/delete fix

2012-03-13  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* NAMESPACE: Added blockpfGaussianOpt.
	* inst/include/blockpfguassianopt.hh: Declarations for univariate
	block-sampling particle filter implementation.
	* src/blockpfguassianopt.cc: Main file for univariate block-sampling
	particle filter implementation.
	* src/blockpfguassianoptfuncs.cc: Internal functions for same.
	* R/blockpfguassianopt.R: Minimal wrapper and output plotting for
	same.
	* doc/blockpfguassianopt.Rd: Added minimal documentation.

2012-01-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.0.2

	* inst/include/rngR.h: New implementation of the RNG class, relying
	solely on R thus removing the need to build against the GSL

	* inst/include/rng.hh: #ifdef'ed out as GNU GSL RNGs no longer used
	* src/rng.cc: Idem
	* src/simfunctions.cc: Idem; and two calls changed from GSL to R

	* inst/include/sampler.hh: Comment out ctor with GSL RNG type
	* inst/include/smctc.hh: Include new rngR.h instead of rng.hh
	* src/pffuncs.cc: Idem

	* src/Makevars: Remove GSL vars for compilation

2012-01-15  Dirk Eddelbuettel  <edd@debian.org>

	* src/rareEventsEx.cpp: Adapted main() from rare-events/main.cc in
	the SMCTC sources
	* src/simfunctions.hh: Also imported from rare-events/, and renamed
	fInitialize to fInitializMC as the library already fInitialize
	* src/simfunctions.hh: Dito
	* src/markovchains/markovchain.h: Also imported from rare-events/
	* R/rareEvents.R: Added minimal wrapper function
	* man/rareEvents.Rd: Added minimal manual page

2012-01-11  Dirk Eddelbuettel  <edd@debian.org>

	* Initial commit to R-Forge; package is still very bare but at least
	passes R CMD check now that it has a man page too

2012-01-07  Dirk Eddelbuettel  <edd@debian.org>

	* Bare-bones wrapping of Adam Johansen's nice SMCTC library described
	in his 2009 paper in the Journal of Statistical Software paper
